// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransitAgencyPopayan.Infrastrucutre.Data.Persistence.Core.Context.ProcedureTransit;

#nullable disable

namespace TransitAgencyPopayan.Infrastrucutre.Data.Persistence.Core.Migrations
{
    [DbContext(typeof(ProcedureContextDb))]
    partial class ProcedureContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Billings.Billing", b =>
                {
                    b.Property<int>("BillingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillingId"), 1L, 1);

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("BillingId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Billing");
                });

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Brands.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BrandId");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Lines.Line", b =>
                {
                    b.Property<int>("LineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LineId"), 1L, 1);

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LineId");

                    b.HasIndex("BrandId");

                    b.ToTable("Line");
                });

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Owners.Owner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OwnerId"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Identification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OwnerId");

                    b.ToTable("Owner");
                });

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.ProcedureBillings.ProcedureBilling", b =>
                {
                    b.Property<int>("ProcedureBillingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcedureBillingId"), 1L, 1);

                    b.Property<int>("BillingId")
                        .HasColumnType("int");

                    b.Property<int>("ProcedureId")
                        .HasColumnType("int");

                    b.HasKey("ProcedureBillingId");

                    b.HasIndex("BillingId");

                    b.HasIndex("ProcedureId");

                    b.ToTable("ProcedureBilling");
                });

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Procedures.Procedure", b =>
                {
                    b.Property<int>("ProcedureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProcedureId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Value")
                        .HasColumnType("real");

                    b.HasKey("ProcedureId");

                    b.ToTable("Procedure");
                });

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.TypeServices.TypeService", b =>
                {
                    b.Property<int>("TypeServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeServiceId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeServiceId");

                    b.ToTable("TypeService");
                });

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.VehicleClasses.VehicleClass", b =>
                {
                    b.Property<int>("VehiculeClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehiculeClassId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehiculeClassId");

                    b.ToTable("VehicleClass");
                });

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.VehicleOwners.VehicleOwner", b =>
                {
                    b.Property<int>("VehicleOwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleOwnerId"), 1L, 1);

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("VehicleOwnerId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleOwner");
                });

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Vehicles.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"), 1L, 1);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotorNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeServiceId")
                        .HasColumnType("int");

                    b.Property<int>("VehiculeClassId")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("LineId");

                    b.HasIndex("TypeServiceId");

                    b.HasIndex("VehiculeClassId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Billings.Billing", b =>
                {
                    b.HasOne("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Vehicles.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Lines.Line", b =>
                {
                    b.HasOne("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Brands.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.ProcedureBillings.ProcedureBilling", b =>
                {
                    b.HasOne("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Billings.Billing", "Billing")
                        .WithMany()
                        .HasForeignKey("BillingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Procedures.Procedure", "Procedure")
                        .WithMany()
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Billing");

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.VehicleOwners.VehicleOwner", b =>
                {
                    b.HasOne("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Owners.Owner", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Vehicles.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Vehicles.Vehicle", b =>
                {
                    b.HasOne("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.Lines.Line", "Line")
                        .WithMany()
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.TypeServices.TypeService", "TypeService")
                        .WithMany()
                        .HasForeignKey("TypeServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransitAgencyPopayan.Aplication.Domine.Core.ProcedureTransit.VehicleClasses.VehicleClass", "VehiculeClass")
                        .WithMany()
                        .HasForeignKey("VehiculeClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");

                    b.Navigation("TypeService");

                    b.Navigation("VehiculeClass");
                });
#pragma warning restore 612, 618
        }
    }
}
